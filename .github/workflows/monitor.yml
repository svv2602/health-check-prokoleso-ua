name: Prokoleso Continuous Monitoring

on:
  # –ó–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç
  schedule:
    - cron: '*/15 * * * *'
  
  # –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫
  workflow_dispatch:
    inputs:
      duration:
        description: '–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (–º–∏–Ω—É—Ç—ã)'
        required: true
        default: '60'
        type: string

jobs:
  monitor:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      
      - name: Run monitoring
        run: |
          # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤
          mkdir -p reports
          
          # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            DURATION=${{ github.event.inputs.duration }}
            echo "–ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–∞ $DURATION –º–∏–Ω—É—Ç"
            timeout ${DURATION}m npm run monitor:continuous || true
          else
            echo "–ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–∞ 15 –º–∏–Ω—É—Ç"
            timeout 15m npm run monitor:continuous || true
          fi
      
      - name: Upload monitoring results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: monitoring-results-${{ github.run_number }}
          path: |
            reports/monitor-report.json
            reports/alerts.log
          retention-days: 7
      
      - name: Analyze results
        if: always()
        run: |
          if [ -f "reports/monitor-report.json" ]; then
            echo "## Monitoring Analysis" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            node -e "
              const fs = require('fs');
              const report = JSON.parse(fs.readFileSync('reports/monitor-report.json', 'utf8'));
              
              const total = report.length;
              const successful = report.filter(r => r.success).length;
              const failed = total - successful;
              const successRate = (successful / total * 100).toFixed(1);
              
              const avgLoadTime = report
                .filter(r => r.success && r.metrics)
                .reduce((sum, r) => sum + r.metrics.loadComplete, 0) / successful || 0;
              
              console.log('### Summary');
              console.log('- Total checks: ' + total);
              console.log('- Successful: ' + successful);
              console.log('- Failed: ' + failed);
              console.log('- Success rate: ' + successRate + '%');
              console.log('- Average load time: ' + Math.round(avgLoadTime) + 'ms');
              
              if (failed > 0) {
                console.log('');
                console.log('### Failed Checks');
                report.filter(r => !r.success).forEach((r, i) => {
                  console.log((i + 1) + '. ' + new Date(r.timestamp).toLocaleString() + ' - ' + r.error);
                });
              }
            " >> $GITHUB_STEP_SUMMARY
          else
            echo "No monitoring data found" >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: Send alert on failure
        if: failure()
        run: |
          echo "üö® Monitoring failed - check the logs for details"
          # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –∞–ª–µ—Ä—Ç–æ–≤ –≤ Slack, Email, Telegram –∏ —Ç.–¥.