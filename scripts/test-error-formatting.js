#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫
 * –ê–≤—Ç–æ—Ä: Prokoleso Health Check Team
 * –í–µ—Ä—Å–∏—è: 1.0.0
 */

const TelegramNotifier = require('./telegram-notifier');
const fs = require('fs');
const path = require('path');

async function testErrorFormatting() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫\n');

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
  const configPath = path.join(__dirname, '..', 'config', 'monitor.json');
  let config = {};
  
  if (fs.existsSync(configPath)) {
    try {
      config = JSON.parse(fs.readFileSync(configPath, 'utf8'));
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', err.message);
      return;
    }
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram
  if (!config.notifications?.telegram?.enabled) {
    console.log('‚ö†Ô∏è Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏');
    return;
  }

  if (!config.notifications.telegram.botToken || !config.notifications.telegram.chatId) {
    console.log('‚ö†Ô∏è –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–ª–∏ chat ID');
    return;
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  const notifier = new TelegramNotifier(config.notifications.telegram);

  try {
    console.log('üì§ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫...\n');

    // –¢–µ—Å—Ç 1: –°—Ç—Ä–æ–∫–æ–≤–∞—è –æ—à–∏–±–∫–∞
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–π –æ—à–∏–±–∫–∏...');
    await notifier.sendTestError({
      testName: '–¢–µ—Å—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–π –æ—à–∏–±–∫–∏',
      error: 'TimeoutError: page.goto: Timeout 30000ms exceeded',
      browser: 'chromium',
      url: 'https://prokoleso.ua',
      timestamp: new Date().toISOString()
    });
    console.log('   ‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');

    // –¢–µ—Å—Ç 2: –û–±—ä–µ–∫—Ç Error
    console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç –æ–±—ä–µ–∫—Ç–∞ Error...');
    const errorObj = new Error('Navigation timeout');
    errorObj.name = 'TimeoutError';
    await notifier.sendTestError({
      testName: '–¢–µ—Å—Ç –æ–±—ä–µ–∫—Ç–∞ Error',
      error: errorObj,
      browser: 'chromium',
      url: 'https://prokoleso.ua',
      timestamp: new Date().toISOString()
    });
    console.log('   ‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');

    // –¢–µ—Å—Ç 3: –û–±—ã—á–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª—è–º–∏
    console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç –æ–±—ã—á–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞...');
    const plainObj = {
      message: 'Connection failed',
      code: 'ECONNREFUSED',
      status: 500,
      stack: 'Error: Connection failed\n    at Object.connect (/app/index.js:10:5)\n    at main (/app/index.js:25:3)'
    };
    await notifier.sendTestError({
      testName: '–¢–µ—Å—Ç –æ–±—ã—á–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞',
      error: plainObj,
      browser: 'chromium',
      url: 'https://prokoleso.ua',
      timestamp: new Date().toISOString()
    });
    console.log('   ‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');

    // –¢–µ—Å—Ç 4: –°–ª–æ–∂–Ω—ã–π –æ–±—ä–µ–∫—Ç
    console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç —Å–ª–æ–∂–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞...');
    const complexObj = {
      name: 'PlaywrightError',
      message: 'Element not found',
      code: 'ELEMENT_NOT_FOUND',
      selector: 'button[data-testid="submit"]',
      timeout: 5000,
      url: 'https://prokoleso.ua/checkout',
      screenshot: '/tmp/screenshot.png',
      trace: '/tmp/trace.zip',
      metadata: {
        browser: 'chromium',
        version: '1.40.0',
        platform: 'linux'
      }
    };
    await notifier.sendTestError({
      testName: '–¢–µ—Å—Ç —Å–ª–æ–∂–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞',
      error: complexObj,
      browser: 'chromium',
      url: 'https://prokoleso.ua',
      timestamp: new Date().toISOString()
    });
    console.log('   ‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');

    // –¢–µ—Å—Ç 5: –û–±—ä–µ–∫—Ç –±–µ–∑ –ø–æ–ª–µ–∑–Ω—ã—Ö –ø–æ–ª–µ–π
    console.log('\n5Ô∏è‚É£ –¢–µ—Å—Ç –æ–±—ä–µ–∫—Ç–∞ –±–µ–∑ –ø–æ–ª–µ–∑–Ω—ã—Ö –ø–æ–ª–µ–π...');
    const uselessObj = {
      someProperty: 'value',
      anotherProperty: 123,
      nested: {
        deep: {
          value: 'nested'
        }
      }
    };
    await notifier.sendTestError({
      testName: '–¢–µ—Å—Ç –æ–±—ä–µ–∫—Ç–∞ –±–µ–∑ –ø–æ–ª–µ–∑–Ω—ã—Ö –ø–æ–ª–µ–π',
      error: uselessObj,
      browser: 'chromium',
      url: 'https://prokoleso.ua',
      timestamp: new Date().toISOString()
    });
    console.log('   ‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');

    // –¢–µ—Å—Ç 6: null/undefined –æ—à–∏–±–∫–∞
    console.log('\n6Ô∏è‚É£ –¢–µ—Å—Ç null/undefined –æ—à–∏–±–∫–∏...');
    await notifier.sendTestError({
      testName: '–¢–µ—Å—Ç null –æ—à–∏–±–∫–∏',
      error: null,
      browser: 'chromium',
      url: 'https://prokoleso.ua',
      timestamp: new Date().toISOString()
    });
    console.log('   ‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');

    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
    console.log('üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
if (require.main === module) {
  testErrorFormatting().catch(console.error);
}

module.exports = testErrorFormatting;
