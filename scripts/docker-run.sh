#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ —Å Playwright —Ç–µ—Å—Ç–∞–º–∏

set -e

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo "üê≥ Playwright Docker Runner"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–ö–û–ú–ê–ù–î–ê] [–û–ü–¶–ò–ò]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  fast      - –ë—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
    echo "  full      - –ü–æ–ª–Ω—ã–µ —Ç–µ—Å—Ç—ã"
    echo "  health    - –¢–µ—Å—Ç—ã —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏"
    echo "  checkout  - –¢–µ—Å—Ç—ã —Ñ–æ—Ä–º—ã –∑–∞–∫–∞–∑–∞"
    echo "  specific  - –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Ç–µ—Å—Ç—ã"
    echo "  monitor   - –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
    echo "  dev       - –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å UI"
    echo "  clean     - –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏ –æ–±—Ä–∞–∑–æ–≤"
    echo ""
    echo "–û–ø—Ü–∏–∏:"
    echo "  --detach, -d    - –ó–∞–ø—É—Å–∫ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ"
    echo "  --build         - –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞"
    echo "  --logs          - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
    echo "  --help, -h      - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 fast --build"
    echo "  $0 full --detach"
    echo "  $0 monitor --logs"
}

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
COMMAND="fast"
DETACH=""
BUILD=""
LOGS=""

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
while [[ $# -gt 0 ]]; do
    case $1 in
        fast|full|health|checkout|specific|monitor|dev|clean)
            COMMAND="$1"
            shift
            ;;
        --detach|-d)
            DETACH="-d"
            shift
            ;;
        --build)
            BUILD="--build"
            shift
            ;;
        --logs)
            LOGS="logs"
            shift
            ;;
        --help|-h)
            show_help
            exit 0
            ;;
        *)
            echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
            show_help
            exit 1
            ;;
    esac
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

if ! docker compose version &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

echo "üê≥ –ó–∞–ø—É—Å–∫ Playwright —Ç–µ—Å—Ç–æ–≤ –≤ Docker..."

case $COMMAND in
    fast)
        echo "‚ö° –ó–∞–ø—É—Å–∫ –±—ã—Å—Ç—Ä—ã—Ö —Ç–µ—Å—Ç–æ–≤..."
        docker compose up $DETACH $BUILD playwright-tests
        ;;
    full)
        echo "üß™ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤..."
        docker compose --profile full up $DETACH $BUILD playwright-full
        ;;
    health)
        echo "üè• –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏..."
        docker compose run --rm playwright-tests npm run test:health
        ;;
    checkout)
        echo "üõí –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Ñ–æ—Ä–º—ã –∑–∞–∫–∞–∑–∞..."
        docker compose run --rm playwright-tests npm run test:checkout
        ;;
    specific)
        echo "üéØ –ó–∞–ø—É—Å–∫ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤..."
        docker compose run --rm playwright-tests npm run test:specific
        ;;
    monitor)
        echo "üìä –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
        docker compose --profile monitor up $DETACH $BUILD playwright-monitor
        ;;
    dev)
        echo "üõ†Ô∏è –ó–∞–ø—É—Å–∫ —Ä–µ–∂–∏–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
        docker compose --profile dev up $DETACH $BUILD playwright-dev
        ;;
    clean)
        echo "üßπ –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤..."
        docker compose down --rmi all --volumes --remove-orphans
        docker system prune -f
        echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        exit 0
        ;;
esac

if [[ "$LOGS" == "logs" ]]; then
    echo "üìã –ü–æ–∫–∞–∑ –ª–æ–≥–æ–≤..."
    docker compose logs -f
fi

echo "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
