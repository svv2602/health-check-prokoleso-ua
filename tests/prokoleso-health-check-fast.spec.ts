import { test, expect } from '@playwright/test';

/**
 * –ë—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã –¥–ª—è CI/CD - —Ç–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
 * –í—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –∑–∞ 30-60 —Å–µ–∫—É–Ω–¥, –ø—Ä–æ–≤–µ—Ä—è—é—Ç –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
 */
test.describe('Prokoleso.ua - –ë—ã—Å—Ç—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ (CI/CD)', () => {
  const BASE_URL = 'https://prokoleso.ua';
  
  // –û–±—â–∏–π —Ö—É–∫ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  test.beforeEach(async ({ page }) => {
    // –ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ —Ç–∞–π–º–∞—É—Ç—ã –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
    page.setDefaultTimeout(10000);
    page.setDefaultNavigationTimeout(10000);
    
    // –ë—ã—Å—Ç—Ä–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è
    await page.goto(BASE_URL, { waitUntil: 'domcontentloaded' });
  });

  test('–°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è', async ({ page }) => {
    console.log('üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–∞–π—Ç–∞...');
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞
    const title = await page.title();
    expect(title).toBeTruthy();
    console.log(`üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${title}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    const response = await page.goto(BASE_URL, { waitUntil: 'domcontentloaded' });
    expect(response?.status()).toBe(200);
    console.log('‚úÖ –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω');
  });

  test('–û—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç', async ({ page }) => {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤...');
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ body
    await expect(page.locator('body')).toBeVisible();
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    const h1Count = await page.locator('h1').count();
    expect(h1Count).toBeGreaterThan(0);
    console.log(`üìÑ H1 –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤: ${h1Count}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    const imgCount = await page.locator('img').count();
    console.log(`üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${imgCount}`);
    
    console.log('‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–π–¥–µ–Ω—ã');
  });

  test('HTTPS –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', async ({ page }) => {
    console.log('üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...');
    
    const response = await page.goto(BASE_URL, { waitUntil: 'domcontentloaded' });
    const url = page.url();
    
    // HTTPS
    expect(url).toMatch(/^https:/);
    console.log('‚úÖ HTTPS –∞–∫—Ç–∏–≤–µ–Ω');
    
    // –°—Ç–∞—Ç—É—Å
    expect(response?.status()).toBe(200);
    console.log('‚úÖ –°—Ç–∞—Ç—É—Å 200 OK');
    
    // –ë–∞–∑–æ–≤—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    const headers = response?.headers();
    if (headers) {
      const hasSecurityHeaders = headers['strict-transport-security'] || 
                                headers['x-frame-options'] ||
                                headers['x-content-type-options'];
      if (hasSecurityHeaders) {
        console.log('‚úÖ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç');
      }
    }
  });

  test('–ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–∞–∑–æ–≤–∞—è', async ({ page }) => {
    console.log('üì± –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏...');
    
    // –ú–æ–±–∏–ª—å–Ω—ã–π viewport
    await page.setViewportSize({ width: 375, height: 667 });
    await page.goto(BASE_URL, { waitUntil: 'domcontentloaded' });
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏
    const bodyBox = await page.locator('body').boundingBox();
    if (bodyBox) {
      expect(bodyBox.width).toBeLessThanOrEqual(375);
      console.log(`üìè –®–∏—Ä–∏–Ω–∞: ${bodyBox.width}px`);
    }
    
    console.log('‚úÖ –ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç');
  });

  test('–ù–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –∫–æ–Ω—Å–æ–ª–∏', async ({ page }) => {
    console.log('üêõ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–æ–∫ –∫–æ–Ω—Å–æ–ª–∏...');
    
    const consoleErrors: string[] = [];
    
    page.on('console', msg => {
      if (msg.type() === 'error') {
        consoleErrors.push(msg.text());
      }
    });
    
    await page.goto(BASE_URL, { waitUntil: 'domcontentloaded' });
    await page.waitForLoadState('networkidle', { timeout: 5000 });
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
    const criticalErrors = consoleErrors.filter(error => 
      !error.includes('favicon') && 
      !error.includes('analytics') &&
      !error.includes('tracking') &&
      !error.includes('gtag') &&
      !error.includes('google-analytics') &&
      !error.includes('Cookie') &&
      !error.includes('_fbp')
    );
    
    console.log(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫: ${criticalErrors.length}`);
    if (criticalErrors.length > 0) {
      criticalErrors.forEach(error => console.log(`   - ${error}`));
    }
    
    expect(criticalErrors.length).toBe(0);
    console.log('‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –Ω–µ—Ç');
  });
});
